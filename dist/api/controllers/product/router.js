"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _controller = _interopRequireDefault(require("./controller"));
var express = _interopRequireWildcard(require("express"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
var _default = express.Router().post("/addproduct", _controller.default.addProduct).post("/addreview", _controller.default.addReview).get("/getreview", _controller.default.getReview).get("/getproductbyid", _controller.default.getProductById).get("/gettoppicks", _controller.default.getTopPicks).get("/getproductseller", _controller.default.getProductSeller).get("/atlassearch", _controller.default.atlasSearch);
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHByZXNzIiwiUm91dGVyIiwicG9zdCIsImNvbnRyb2xsZXIiLCJhZGRQcm9kdWN0IiwiYWRkUmV2aWV3IiwiZ2V0IiwiZ2V0UmV2aWV3IiwiZ2V0UHJvZHVjdEJ5SWQiLCJnZXRUb3BQaWNrcyIsImdldFByb2R1Y3RTZWxsZXIiLCJhdGxhc1NlYXJjaCJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NlcnZlci9hcGkvY29udHJvbGxlcnMvcHJvZHVjdC9yb3V0ZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNvbnRyb2xsZXIgZnJvbSBcIi4vY29udHJvbGxlclwiO1xuaW1wb3J0ICogYXMgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiO1xuZXhwb3J0IGRlZmF1bHQgZXhwcmVzc1xuICAuUm91dGVyKClcbiAgLnBvc3QoXCIvYWRkcHJvZHVjdFwiLCBjb250cm9sbGVyLmFkZFByb2R1Y3QpXG4gIC5wb3N0KFwiL2FkZHJldmlld1wiLCBjb250cm9sbGVyLmFkZFJldmlldylcbiAgLmdldChcIi9nZXRyZXZpZXdcIiwgY29udHJvbGxlci5nZXRSZXZpZXcpXG4gIC5nZXQoXCIvZ2V0cHJvZHVjdGJ5aWRcIiwgY29udHJvbGxlci5nZXRQcm9kdWN0QnlJZClcbiAgLmdldChcIi9nZXR0b3BwaWNrc1wiLCBjb250cm9sbGVyLmdldFRvcFBpY2tzKVxuICAuZ2V0KFwiL2dldHByb2R1Y3RzZWxsZXJcIiwgY29udHJvbGxlci5nZXRQcm9kdWN0U2VsbGVyKVxuICAuZ2V0KFwiL2F0bGFzc2VhcmNoXCIsIGNvbnRyb2xsZXIuYXRsYXNTZWFyY2gpO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQW1DO0FBQUE7QUFBQTtBQUFBLGVBQ3BCQSxPQUFPLENBQ25CQyxNQUFNLEVBQUUsQ0FDUkMsSUFBSSxDQUFDLGFBQWEsRUFBRUMsbUJBQVUsQ0FBQ0MsVUFBVSxDQUFDLENBQzFDRixJQUFJLENBQUMsWUFBWSxFQUFFQyxtQkFBVSxDQUFDRSxTQUFTLENBQUMsQ0FDeENDLEdBQUcsQ0FBQyxZQUFZLEVBQUVILG1CQUFVLENBQUNJLFNBQVMsQ0FBQyxDQUN2Q0QsR0FBRyxDQUFDLGlCQUFpQixFQUFFSCxtQkFBVSxDQUFDSyxjQUFjLENBQUMsQ0FDakRGLEdBQUcsQ0FBQyxjQUFjLEVBQUVILG1CQUFVLENBQUNNLFdBQVcsQ0FBQyxDQUMzQ0gsR0FBRyxDQUFDLG1CQUFtQixFQUFFSCxtQkFBVSxDQUFDTyxnQkFBZ0IsQ0FBQyxDQUNyREosR0FBRyxDQUFDLGNBQWMsRUFBRUgsbUJBQVUsQ0FBQ1EsV0FBVyxDQUFDO0FBQUEifQ==